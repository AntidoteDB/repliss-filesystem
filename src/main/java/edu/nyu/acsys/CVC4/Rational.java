/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package edu.nyu.acsys.CVC4;

public class Rational {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Rational(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Rational obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        CVC4JNI.delete_Rational(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static Rational fromDecimal(String dec) {
    return new Rational(CVC4JNI.Rational_fromDecimal(dec), true);
  }

  public Rational() {
    this(CVC4JNI.new_Rational__SWIG_0(), true);
  }

  public Rational(String s, long base) {
    this(CVC4JNI.new_Rational__SWIG_1(s, base), true);
  }

  public Rational(String s) {
    this(CVC4JNI.new_Rational__SWIG_2(s), true);
  }

  public Rational(Rational q) {
    this(CVC4JNI.new_Rational__SWIG_3(Rational.getCPtr(q), q), true);
  }

  public Rational(int n) {
    this(CVC4JNI.new_Rational__SWIG_4(n), true);
  }

  public Rational(long n) {
    this(CVC4JNI.new_Rational__SWIG_5(n), true);
  }

  public Rational(int n, int d) {
    this(CVC4JNI.new_Rational__SWIG_6(n, d), true);
  }

  public Rational(long n, long d) {
    this(CVC4JNI.new_Rational__SWIG_7(n, d), true);
  }

  public Rational(Integer n, Integer d) {
    this(CVC4JNI.new_Rational__SWIG_8(Integer.getCPtr(n), n, Integer.getCPtr(d), d), true);
  }

  public Rational(Integer n) {
    this(CVC4JNI.new_Rational__SWIG_9(Integer.getCPtr(n), n), true);
  }

  public SWIGTYPE_p_mpq_class getValue() {
    return new SWIGTYPE_p_mpq_class(CVC4JNI.Rational_getValue(swigCPtr, this), true);
  }

  public Integer getNumerator() {
    return new Integer(CVC4JNI.Rational_getNumerator(swigCPtr, this), true);
  }

  public Integer getDenominator() {
    return new Integer(CVC4JNI.Rational_getDenominator(swigCPtr, this), true);
  }

  public static SWIGTYPE_p_MaybeT_CVC4__Rational_t fromDouble(double d) {
    return new SWIGTYPE_p_MaybeT_CVC4__Rational_t(CVC4JNI.Rational_fromDouble(d), true);
  }

  public double getDouble() {
    return CVC4JNI.Rational_getDouble(swigCPtr, this);
  }

  public Rational inverse() {
    return new Rational(CVC4JNI.Rational_inverse(swigCPtr, this), true);
  }

  public int cmp(Rational x) {
    return CVC4JNI.Rational_cmp(swigCPtr, this, Rational.getCPtr(x), x);
  }

  public int sgn() {
    return CVC4JNI.Rational_sgn(swigCPtr, this);
  }

  public boolean isZero() {
    return CVC4JNI.Rational_isZero(swigCPtr, this);
  }

  public boolean isOne() {
    return CVC4JNI.Rational_isOne(swigCPtr, this);
  }

  public boolean isNegativeOne() {
    return CVC4JNI.Rational_isNegativeOne(swigCPtr, this);
  }

  public Rational abs() {
    return new Rational(CVC4JNI.Rational_abs(swigCPtr, this), true);
  }

  public Integer floor() {
    return new Integer(CVC4JNI.Rational_floor(swigCPtr, this), true);
  }

  public Integer ceiling() {
    return new Integer(CVC4JNI.Rational_ceiling(swigCPtr, this), true);
  }

  public Rational floor_frac() {
    return new Rational(CVC4JNI.Rational_floor_frac(swigCPtr, this), true);
  }

  public Rational assign(Rational x) {
    return new Rational(CVC4JNI.Rational_assign(swigCPtr, this, Rational.getCPtr(x), x), false);
  }

  public Rational minus() {
    return new Rational(CVC4JNI.Rational_minus__SWIG_0(swigCPtr, this), true);
  }

  public boolean equals(Rational y) {
    return CVC4JNI.Rational_equals(swigCPtr, this, Rational.getCPtr(y), y);
  }

  public boolean less(Rational y) {
    return CVC4JNI.Rational_less(swigCPtr, this, Rational.getCPtr(y), y);
  }

  public boolean lessEqual(Rational y) {
    return CVC4JNI.Rational_lessEqual(swigCPtr, this, Rational.getCPtr(y), y);
  }

  public boolean greater(Rational y) {
    return CVC4JNI.Rational_greater(swigCPtr, this, Rational.getCPtr(y), y);
  }

  public boolean greaterEqual(Rational y) {
    return CVC4JNI.Rational_greaterEqual(swigCPtr, this, Rational.getCPtr(y), y);
  }

  public Rational plus(Rational y) {
    return new Rational(CVC4JNI.Rational_plus(swigCPtr, this, Rational.getCPtr(y), y), true);
  }

  public Rational minus(Rational y) {
    return new Rational(CVC4JNI.Rational_minus__SWIG_1(swigCPtr, this, Rational.getCPtr(y), y), true);
  }

  public Rational times(Rational y) {
    return new Rational(CVC4JNI.Rational_times(swigCPtr, this, Rational.getCPtr(y), y), true);
  }

  public Rational dividedBy(Rational y) {
    return new Rational(CVC4JNI.Rational_dividedBy(swigCPtr, this, Rational.getCPtr(y), y), true);
  }

  public Rational plusAssign(Rational y) {
    return new Rational(CVC4JNI.Rational_plusAssign(swigCPtr, this, Rational.getCPtr(y), y), false);
  }

  public Rational minusAssign(Rational y) {
    return new Rational(CVC4JNI.Rational_minusAssign(swigCPtr, this, Rational.getCPtr(y), y), false);
  }

  public Rational timesAssign(Rational y) {
    return new Rational(CVC4JNI.Rational_timesAssign(swigCPtr, this, Rational.getCPtr(y), y), false);
  }

  public Rational dividedByAssign(Rational y) {
    return new Rational(CVC4JNI.Rational_dividedByAssign(swigCPtr, this, Rational.getCPtr(y), y), false);
  }

  public boolean isIntegral() {
    return CVC4JNI.Rational_isIntegral(swigCPtr, this);
  }

  public String toString(int base) {
    return CVC4JNI.Rational_toString__SWIG_0(swigCPtr, this, base);
  }

  public String toString() {
    return CVC4JNI.Rational_toString__SWIG_1(swigCPtr, this);
  }

  public long hash() {
    return CVC4JNI.Rational_hash(swigCPtr, this);
  }

  public long complexity() {
    return CVC4JNI.Rational_complexity(swigCPtr, this);
  }

  public int absCmp(Rational q) {
    return CVC4JNI.Rational_absCmp(swigCPtr, this, Rational.getCPtr(q), q);
  }

}
