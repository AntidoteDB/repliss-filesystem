/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package edu.nyu.acsys.CVC4;

public class Expr implements Iterable<Expr> {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected Expr(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
    this.em = SmtEngine.mkRef(getExprManager()); // keep ref to em in SWIG proxy class
  }

  protected static long getCPtr(Expr obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
//    SmtEngine.dlRef(em);
    em = null;
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        CVC4JNI.delete_Expr(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  // a ref is kept here to keep Java GC from collecting the ExprManager
  // before the Expr
  private Object em;

  public Expr assign(Expr e) {
    Expr r = assignInternal(e);
    this.em = SmtEngine.mkRef(getExprManager()); // keep ref to em in SWIG proxy class
    return r;
  }

  public Expr() {
    this(CVC4JNI.new_Expr__SWIG_0(), true);
    this.em = SmtEngine.mkRef(getExprManager()); // keep ref to em in SWIG proxy class
  }

  public Expr(Expr e) {
    this(CVC4JNI.new_Expr__SWIG_1(Expr.getCPtr(e), e), true);
    this.em = SmtEngine.mkRef(getExprManager()); // keep ref to em in SWIG proxy class
  }

  protected Expr assignInternal(Expr e) {
    return new Expr(CVC4JNI.Expr_assignInternal(swigCPtr, this, Expr.getCPtr(e), e), false);
  }

  public boolean equals(Expr e) {
    return CVC4JNI.Expr_equals(swigCPtr, this, Expr.getCPtr(e), e);
  }

  public boolean less(Expr e) {
    return CVC4JNI.Expr_less(swigCPtr, this, Expr.getCPtr(e), e);
  }

  public boolean greater(Expr e) {
    return CVC4JNI.Expr_greater(swigCPtr, this, Expr.getCPtr(e), e);
  }

  public boolean lessEqual(Expr e) {
    return CVC4JNI.Expr_lessEqual(swigCPtr, this, Expr.getCPtr(e), e);
  }

  public boolean greaterEqual(Expr e) {
    return CVC4JNI.Expr_greaterEqual(swigCPtr, this, Expr.getCPtr(e), e);
  }

  public long getId() {
    return CVC4JNI.Expr_getId(swigCPtr, this);
  }

  public Kind getKind() {
    return Kind.swigToEnum(CVC4JNI.Expr_getKind(swigCPtr, this));
  }

  public long getNumChildren() {
    return CVC4JNI.Expr_getNumChildren(swigCPtr, this);
  }

  public Expr getChild(long i) {
    return new Expr(CVC4JNI.Expr_getChild(swigCPtr, this, i), true);
  }

  public vectorExpr getChildren() {
    return new vectorExpr(CVC4JNI.Expr_getChildren(swigCPtr, this), true);
  }

  public Expr notExpr() {
    return new Expr(CVC4JNI.Expr_notExpr(swigCPtr, this), true);
  }

  public Expr andExpr(Expr e) {
    return new Expr(CVC4JNI.Expr_andExpr(swigCPtr, this, Expr.getCPtr(e), e), true);
  }

  public Expr orExpr(Expr e) {
    return new Expr(CVC4JNI.Expr_orExpr(swigCPtr, this, Expr.getCPtr(e), e), true);
  }

  public Expr xorExpr(Expr e) {
    return new Expr(CVC4JNI.Expr_xorExpr(swigCPtr, this, Expr.getCPtr(e), e), true);
  }

  public Expr iffExpr(Expr e) {
    return new Expr(CVC4JNI.Expr_iffExpr(swigCPtr, this, Expr.getCPtr(e), e), true);
  }

  public Expr impExpr(Expr e) {
    return new Expr(CVC4JNI.Expr_impExpr(swigCPtr, this, Expr.getCPtr(e), e), true);
  }

  public Expr iteExpr(Expr then_e, Expr else_e) {
    return new Expr(CVC4JNI.Expr_iteExpr(swigCPtr, this, Expr.getCPtr(then_e), then_e, Expr.getCPtr(else_e), else_e), true);
  }

  static public class const_iterator {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;
  
    protected const_iterator(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(const_iterator obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          CVC4JNI.delete_Expr_const_iterator(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public const_iterator() {
      this(CVC4JNI.new_Expr_const_iterator__SWIG_0(), true);
    }
  
    public const_iterator(const_iterator it) {
      this(CVC4JNI.new_Expr_const_iterator__SWIG_1(const_iterator.getCPtr(it), it), true);
    }
  
    public Expr __ref__() {
      return new Expr(CVC4JNI.Expr_const_iterator___ref__(swigCPtr, this), true);
    }
  
  }

  public boolean hasOperator() {
    return CVC4JNI.Expr_hasOperator(swigCPtr, this);
  }

  public Expr getOperator() {
    return new Expr(CVC4JNI.Expr_getOperator(swigCPtr, this), true);
  }

  public Type getType(boolean check) {
    return new Type(CVC4JNI.Expr_getType__SWIG_0(swigCPtr, this, check), true);
  }

  public Type getType() {
    return new Type(CVC4JNI.Expr_getType__SWIG_1(swigCPtr, this), true);
  }

  public Expr substitute(Expr e, Expr replacement) {
    return new Expr(CVC4JNI.Expr_substitute__SWIG_0(swigCPtr, this, Expr.getCPtr(e), e, Expr.getCPtr(replacement), replacement), true);
  }

  public Expr substitute(vectorExpr exes, vectorExpr replacements) {
    return new Expr(CVC4JNI.Expr_substitute__SWIG_1(swigCPtr, this, vectorExpr.getCPtr(exes), exes, vectorExpr.getCPtr(replacements), replacements), true);
  }

  public Expr substitute(hashmapExpr map) {
    return new Expr(CVC4JNI.Expr_substitute__SWIG_2(swigCPtr, this, hashmapExpr.getCPtr(map), map), true);
  }

  public String toString() {
    return CVC4JNI.Expr_toString(swigCPtr, this);
  }

  public void toStream(java.io.OutputStream out, int toDepth, boolean types, long dag, OutputLanguage language) {
    edu.nyu.acsys.CVC4.JavaOutputStreamAdapter tempout = new edu.nyu.acsys.CVC4.JavaOutputStreamAdapter();
    try {
      CVC4JNI.Expr_toStream__SWIG_0(swigCPtr, this, edu.nyu.acsys.CVC4.JavaOutputStreamAdapter.getCPtr(tempout), toDepth, types, dag, language.swigValue());
    } finally {
    new java.io.PrintStream(out).print(tempout.toString());
    }
  }

  public void toStream(java.io.OutputStream out, int toDepth, boolean types, long dag) {
    edu.nyu.acsys.CVC4.JavaOutputStreamAdapter tempout = new edu.nyu.acsys.CVC4.JavaOutputStreamAdapter();
    try {
      CVC4JNI.Expr_toStream__SWIG_1(swigCPtr, this, edu.nyu.acsys.CVC4.JavaOutputStreamAdapter.getCPtr(tempout), toDepth, types, dag);
    } finally {
    new java.io.PrintStream(out).print(tempout.toString());
    }
  }

  public void toStream(java.io.OutputStream out, int toDepth, boolean types) {
    edu.nyu.acsys.CVC4.JavaOutputStreamAdapter tempout = new edu.nyu.acsys.CVC4.JavaOutputStreamAdapter();
    try {
      CVC4JNI.Expr_toStream__SWIG_2(swigCPtr, this, edu.nyu.acsys.CVC4.JavaOutputStreamAdapter.getCPtr(tempout), toDepth, types);
    } finally {
    new java.io.PrintStream(out).print(tempout.toString());
    }
  }

  public void toStream(java.io.OutputStream out, int toDepth) {
    edu.nyu.acsys.CVC4.JavaOutputStreamAdapter tempout = new edu.nyu.acsys.CVC4.JavaOutputStreamAdapter();
    try {
      CVC4JNI.Expr_toStream__SWIG_3(swigCPtr, this, edu.nyu.acsys.CVC4.JavaOutputStreamAdapter.getCPtr(tempout), toDepth);
    } finally {
    new java.io.PrintStream(out).print(tempout.toString());
    }
  }

  public void toStream(java.io.OutputStream out) {
    edu.nyu.acsys.CVC4.JavaOutputStreamAdapter tempout = new edu.nyu.acsys.CVC4.JavaOutputStreamAdapter();
    try {
      CVC4JNI.Expr_toStream__SWIG_4(swigCPtr, this, edu.nyu.acsys.CVC4.JavaOutputStreamAdapter.getCPtr(tempout));
    } finally {
    new java.io.PrintStream(out).print(tempout.toString());
    }
  }

  public boolean isNull() {
    return CVC4JNI.Expr_isNull(swigCPtr, this);
  }

  public boolean isVariable() {
    return CVC4JNI.Expr_isVariable(swigCPtr, this);
  }

  public boolean isConst() {
    return CVC4JNI.Expr_isConst(swigCPtr, this);
  }

  public boolean hasFreeVariable() {
    return CVC4JNI.Expr_hasFreeVariable(swigCPtr, this);
  }

  public ExprManager getExprManager() {
    long cPtr = CVC4JNI.Expr_getExprManager(swigCPtr, this);
    return (cPtr == 0) ? null : new ExprManager(cPtr, false);
  }

  public Expr exportTo(ExprManager exprManager, ExprManagerMapCollection variableMap, long flags) {
    return new Expr(CVC4JNI.Expr_exportTo__SWIG_0(swigCPtr, this, ExprManager.getCPtr(exprManager), exprManager, ExprManagerMapCollection.getCPtr(variableMap), variableMap, flags), true);
  }

  public Expr exportTo(ExprManager exprManager, ExprManagerMapCollection variableMap) {
    return new Expr(CVC4JNI.Expr_exportTo__SWIG_1(swigCPtr, this, ExprManager.getCPtr(exprManager), exprManager, ExprManagerMapCollection.getCPtr(variableMap), variableMap), true);
  }

  public void printAst(java.io.OutputStream out, int indent) {
    edu.nyu.acsys.CVC4.JavaOutputStreamAdapter tempout = new edu.nyu.acsys.CVC4.JavaOutputStreamAdapter();
    try {
      CVC4JNI.Expr_printAst__SWIG_0(swigCPtr, this, edu.nyu.acsys.CVC4.JavaOutputStreamAdapter.getCPtr(tempout), indent);
    } finally {
    new java.io.PrintStream(out).print(tempout.toString());
    }
  }

  public void printAst(java.io.OutputStream out) {
    edu.nyu.acsys.CVC4.JavaOutputStreamAdapter tempout = new edu.nyu.acsys.CVC4.JavaOutputStreamAdapter();
    try {
      CVC4JNI.Expr_printAst__SWIG_1(swigCPtr, this, edu.nyu.acsys.CVC4.JavaOutputStreamAdapter.getCPtr(tempout));
    } finally {
    new java.io.PrintStream(out).print(tempout.toString());
    }
  }

  public JavaIteratorAdapter_Expr iterator() {
    return new JavaIteratorAdapter_Expr(CVC4JNI.Expr_iterator(swigCPtr, this), true);
  }

  public TypeConstant getConstTypeConstant() {
    return TypeConstant.swigToEnum(CVC4JNI.Expr_getConstTypeConstant(swigCPtr, this));
  }

  public ArrayStoreAll getConstArrayStoreAll() {
    return new ArrayStoreAll(CVC4JNI.Expr_getConstArrayStoreAll(swigCPtr, this), false);
  }

  public BitVectorSize getConstBitVectorSize() {
    return new BitVectorSize(CVC4JNI.Expr_getConstBitVectorSize(swigCPtr, this), false);
  }

  public AscriptionType getConstAscriptionType() {
    return new AscriptionType(CVC4JNI.Expr_getConstAscriptionType(swigCPtr, this), false);
  }

  public BitVectorBitOf getConstBitVectorBitOf() {
    return new BitVectorBitOf(CVC4JNI.Expr_getConstBitVectorBitOf(swigCPtr, this), false);
  }

  public BitVectorRepeat getConstBitVectorRepeat() {
    return new BitVectorRepeat(CVC4JNI.Expr_getConstBitVectorRepeat(swigCPtr, this), false);
  }

  public BitVectorExtract getConstBitVectorExtract() {
    return new BitVectorExtract(CVC4JNI.Expr_getConstBitVectorExtract(swigCPtr, this), false);
  }

  public BitVectorRotateLeft getConstBitVectorRotateLeft() {
    return new BitVectorRotateLeft(CVC4JNI.Expr_getConstBitVectorRotateLeft(swigCPtr, this), false);
  }

  public BitVectorSignExtend getConstBitVectorSignExtend() {
    return new BitVectorSignExtend(CVC4JNI.Expr_getConstBitVectorSignExtend(swigCPtr, this), false);
  }

  public BitVectorZeroExtend getConstBitVectorZeroExtend() {
    return new BitVectorZeroExtend(CVC4JNI.Expr_getConstBitVectorZeroExtend(swigCPtr, this), false);
  }

  public BitVectorRotateRight getConstBitVectorRotateRight() {
    return new BitVectorRotateRight(CVC4JNI.Expr_getConstBitVectorRotateRight(swigCPtr, this), false);
  }

  public UninterpretedConstant getConstUninterpretedConstant() {
    return new UninterpretedConstant(CVC4JNI.Expr_getConstUninterpretedConstant(swigCPtr, this), false);
  }

  public Kind getConstKind() {
    return Kind.swigToEnum(CVC4JNI.Expr_getConstKind(swigCPtr, this));
  }

  public DatatypeIndexConstant getConstDatatypeIndexConstant() {
    return new DatatypeIndexConstant(CVC4JNI.Expr_getConstDatatypeIndexConstant(swigCPtr, this), false);
  }

  public Rational getConstRational() {
    return new Rational(CVC4JNI.Expr_getConstRational(swigCPtr, this), false);
  }

  public BitVector getConstBitVector() {
    return new BitVector(CVC4JNI.Expr_getConstBitVector(swigCPtr, this), false);
  }

  public CVC4String getConstString() {
    return new CVC4String(CVC4JNI.Expr_getConstString(swigCPtr, this), false);
  }

  public EmptySet getConstEmptySet() {
    return new EmptySet(CVC4JNI.Expr_getConstEmptySet(swigCPtr, this), false);
  }

  public boolean getConstBoolean() {
    return CVC4JNI.Expr_getConstBoolean(swigCPtr, this);
  }

}
