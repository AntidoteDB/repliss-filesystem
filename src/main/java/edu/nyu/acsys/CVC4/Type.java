/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package edu.nyu.acsys.CVC4;

public class Type {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected Type(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
    this.em = SmtEngine.mkRef(getExprManager()); // keep ref to em in SWIG proxy class
  }

  protected static long getCPtr(Type obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

/*   protected void finalize() {
    delete();
  } */

  public synchronized void delete() {
//    SmtEngine.dlRef(em);
    em = null;
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        CVC4JNI.delete_Type(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  // a ref is kept here to keep Java GC from collecting the ExprManager
  // before the Type
  private Object em;

  public Type assign(Type t) {
    Type r = assignInternal(t);
    this.em = SmtEngine.mkRef(getExprManager()); // keep ref to em in SWIG proxy class
    return r;
  }

  public Type() {
    this(CVC4JNI.new_Type__SWIG_1(), true);
    this.em = SmtEngine.mkRef(getExprManager()); // keep ref to em in SWIG proxy class
  }

  public Type(Type t) {
    this(CVC4JNI.new_Type__SWIG_2(Type.getCPtr(t), t), true);
    this.em = SmtEngine.mkRef(getExprManager()); // keep ref to em in SWIG proxy class
  }

  public boolean isNull() {
    return CVC4JNI.Type_isNull(swigCPtr, this);
  }

  public Cardinality getCardinality() {
    return new Cardinality(CVC4JNI.Type_getCardinality(swigCPtr, this), true);
  }

  public boolean isWellFounded() {
    return CVC4JNI.Type_isWellFounded(swigCPtr, this);
  }

  public Expr mkGroundTerm() {
    return new Expr(CVC4JNI.Type_mkGroundTerm(swigCPtr, this), true);
  }

  public boolean isSubtypeOf(Type t) {
    return CVC4JNI.Type_isSubtypeOf(swigCPtr, this, Type.getCPtr(t), t);
  }

  public boolean isComparableTo(Type t) {
    return CVC4JNI.Type_isComparableTo(swigCPtr, this, Type.getCPtr(t), t);
  }

  public Type getBaseType() {
    return new Type(CVC4JNI.Type_getBaseType(swigCPtr, this), true);
  }

  public Type substitute(Type type, Type replacement) {
    return new Type(CVC4JNI.Type_substitute__SWIG_0(swigCPtr, this, Type.getCPtr(type), type, Type.getCPtr(replacement), replacement), true);
  }

  public Type substitute(vectorType types, vectorType replacements) {
    return new Type(CVC4JNI.Type_substitute__SWIG_1(swigCPtr, this, vectorType.getCPtr(types), types, vectorType.getCPtr(replacements), replacements), true);
  }

  public ExprManager getExprManager() {
    long cPtr = CVC4JNI.Type_getExprManager(swigCPtr, this);
    return (cPtr == 0) ? null : new ExprManager(cPtr, false);
  }

  public Type exportTo(ExprManager exprManager, ExprManagerMapCollection vmap) {
    return new Type(CVC4JNI.Type_exportTo(swigCPtr, this, ExprManager.getCPtr(exprManager), exprManager, ExprManagerMapCollection.getCPtr(vmap), vmap), true);
  }

  protected Type assignInternal(Type t) {
    return new Type(CVC4JNI.Type_assignInternal(swigCPtr, this, Type.getCPtr(t), t), false);
  }

  public boolean equals(Type t) {
    return CVC4JNI.Type_equals(swigCPtr, this, Type.getCPtr(t), t);
  }

  public boolean less(Type t) {
    return CVC4JNI.Type_less(swigCPtr, this, Type.getCPtr(t), t);
  }

  public boolean lessEqual(Type t) {
    return CVC4JNI.Type_lessEqual(swigCPtr, this, Type.getCPtr(t), t);
  }

  public boolean greater(Type t) {
    return CVC4JNI.Type_greater(swigCPtr, this, Type.getCPtr(t), t);
  }

  public boolean greaterEqual(Type t) {
    return CVC4JNI.Type_greaterEqual(swigCPtr, this, Type.getCPtr(t), t);
  }

  public boolean isBoolean() {
    return CVC4JNI.Type_isBoolean(swigCPtr, this);
  }

  public boolean isInteger() {
    return CVC4JNI.Type_isInteger(swigCPtr, this);
  }

  public boolean isReal() {
    return CVC4JNI.Type_isReal(swigCPtr, this);
  }

  public boolean isString() {
    return CVC4JNI.Type_isString(swigCPtr, this);
  }

  public boolean isRegExp() {
    return CVC4JNI.Type_isRegExp(swigCPtr, this);
  }

  public boolean isRoundingMode() {
    return CVC4JNI.Type_isRoundingMode(swigCPtr, this);
  }

  public boolean isBitVector() {
    return CVC4JNI.Type_isBitVector(swigCPtr, this);
  }

  public boolean isFloatingPoint() {
    return CVC4JNI.Type_isFloatingPoint(swigCPtr, this);
  }

  public boolean isFunction() {
    return CVC4JNI.Type_isFunction(swigCPtr, this);
  }

  public boolean isPredicate() {
    return CVC4JNI.Type_isPredicate(swigCPtr, this);
  }

  public boolean isTuple() {
    return CVC4JNI.Type_isTuple(swigCPtr, this);
  }

  public boolean isRecord() {
    return CVC4JNI.Type_isRecord(swigCPtr, this);
  }

  public boolean isSExpr() {
    return CVC4JNI.Type_isSExpr(swigCPtr, this);
  }

  public boolean isArray() {
    return CVC4JNI.Type_isArray(swigCPtr, this);
  }

  public boolean isSet() {
    return CVC4JNI.Type_isSet(swigCPtr, this);
  }

  public boolean isDatatype() {
    return CVC4JNI.Type_isDatatype(swigCPtr, this);
  }

  public boolean isConstructor() {
    return CVC4JNI.Type_isConstructor(swigCPtr, this);
  }

  public boolean isSelector() {
    return CVC4JNI.Type_isSelector(swigCPtr, this);
  }

  public boolean isTester() {
    return CVC4JNI.Type_isTester(swigCPtr, this);
  }

  public boolean isSort() {
    return CVC4JNI.Type_isSort(swigCPtr, this);
  }

  public boolean isSortConstructor() {
    return CVC4JNI.Type_isSortConstructor(swigCPtr, this);
  }

  public void toStream(java.io.OutputStream out) {
    JavaOutputStreamAdapter tempout = new JavaOutputStreamAdapter();
    try {
      CVC4JNI.Type_toStream(swigCPtr, this, JavaOutputStreamAdapter.getCPtr(tempout));
    } finally {
    new java.io.PrintStream(out).print(tempout.toString());
    }
  }

  public String toString() {
    return CVC4JNI.Type_toString(swigCPtr, this);
  }

}
