/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package edu.nyu.acsys.CVC4;

public class Result {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Result(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Result obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

/*   protected void finalize() {
    delete();
  } */

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        CVC4JNI.delete_Result(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Result() {
    this(CVC4JNI.new_Result__SWIG_0(), true);
  }

  public Result(Sat s, String inputName) {
    this(CVC4JNI.new_Result__SWIG_1(s.swigValue(), inputName), true);
  }

  public Result(Sat s) {
    this(CVC4JNI.new_Result__SWIG_2(s.swigValue()), true);
  }

  public Result(Validity v, String inputName) {
    this(CVC4JNI.new_Result__SWIG_3(v.swigValue(), inputName), true);
  }

  public Result(Validity v) {
    this(CVC4JNI.new_Result__SWIG_4(v.swigValue()), true);
  }

  public Result(Sat s, UnknownExplanation unknownExplanation, String inputName) {
    this(CVC4JNI.new_Result__SWIG_5(s.swigValue(), unknownExplanation.swigValue(), inputName), true);
  }

  public Result(Sat s, UnknownExplanation unknownExplanation) {
    this(CVC4JNI.new_Result__SWIG_6(s.swigValue(), unknownExplanation.swigValue()), true);
  }

  public Result(Validity v, UnknownExplanation unknownExplanation, String inputName) {
    this(CVC4JNI.new_Result__SWIG_7(v.swigValue(), unknownExplanation.swigValue(), inputName), true);
  }

  public Result(Validity v, UnknownExplanation unknownExplanation) {
    this(CVC4JNI.new_Result__SWIG_8(v.swigValue(), unknownExplanation.swigValue()), true);
  }

  public Result(String s, String inputName) {
    this(CVC4JNI.new_Result__SWIG_9(s, inputName), true);
  }

  public Result(String s) {
    this(CVC4JNI.new_Result__SWIG_10(s), true);
  }

  public Result(Result r, String inputName) {
    this(CVC4JNI.new_Result__SWIG_11(Result.getCPtr(r), r, inputName), true);
  }

  public Sat isSat() {
    return Sat.swigToEnum(CVC4JNI.Result_isSat(swigCPtr, this));
  }

  public Validity isValid() {
    return Validity.swigToEnum(CVC4JNI.Result_isValid(swigCPtr, this));
  }

  public boolean isUnknown() {
    return CVC4JNI.Result_isUnknown(swigCPtr, this);
  }

  public Type getType() {
    return Type.swigToEnum(CVC4JNI.Result_getType(swigCPtr, this));
  }

  public boolean isNull() {
    return CVC4JNI.Result_isNull(swigCPtr, this);
  }

  public UnknownExplanation whyUnknown() {
    return UnknownExplanation.swigToEnum(CVC4JNI.Result_whyUnknown(swigCPtr, this));
  }

  public boolean equals(Result r) {
    return CVC4JNI.Result_equals(swigCPtr, this, Result.getCPtr(r), r);
  }

  public Result asSatisfiabilityResult() {
    return new Result(CVC4JNI.Result_asSatisfiabilityResult(swigCPtr, this), true);
  }

  public Result asValidityResult() {
    return new Result(CVC4JNI.Result_asValidityResult(swigCPtr, this), true);
  }

  public String toString() {
    return CVC4JNI.Result_toString(swigCPtr, this);
  }

  public String getInputName() {
    return CVC4JNI.Result_getInputName(swigCPtr, this);
  }

  public void toStream(java.io.OutputStream out, OutputLanguage language) {
    JavaOutputStreamAdapter tempout = new JavaOutputStreamAdapter();
    try {
      CVC4JNI.Result_toStream(swigCPtr, this, JavaOutputStreamAdapter.getCPtr(tempout), language.swigValue());
    } finally {
    new java.io.PrintStream(out).print(tempout.toString());
    }
  }

  public void toStreamSmt2(java.io.OutputStream out) {
    JavaOutputStreamAdapter tempout = new JavaOutputStreamAdapter();
    try {
      CVC4JNI.Result_toStreamSmt2(swigCPtr, this, JavaOutputStreamAdapter.getCPtr(tempout));
    } finally {
    new java.io.PrintStream(out).print(tempout.toString());
    }
  }

  public void toStreamTptp(java.io.OutputStream out) {
    JavaOutputStreamAdapter tempout = new JavaOutputStreamAdapter();
    try {
      CVC4JNI.Result_toStreamTptp(swigCPtr, this, JavaOutputStreamAdapter.getCPtr(tempout));
    } finally {
    new java.io.PrintStream(out).print(tempout.toString());
    }
  }

  public void toStreamDefault(java.io.OutputStream out) {
    JavaOutputStreamAdapter tempout = new JavaOutputStreamAdapter();
    try {
      CVC4JNI.Result_toStreamDefault(swigCPtr, this, JavaOutputStreamAdapter.getCPtr(tempout));
    } finally {
    new java.io.PrintStream(out).print(tempout.toString());
    }
  }

  public final static class Sat {
    public final static Sat UNSAT = new Sat("UNSAT", CVC4JNI.Result_UNSAT_get());
    public final static Sat SAT = new Sat("SAT", CVC4JNI.Result_SAT_get());
    public final static Sat SAT_UNKNOWN = new Sat("SAT_UNKNOWN", CVC4JNI.Result_SAT_UNKNOWN_get());

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static Sat swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + Sat.class + " with value " + swigValue);
    }

    private Sat(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private Sat(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private Sat(String swigName, Sat swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static Sat[] swigValues = { UNSAT, SAT, SAT_UNKNOWN };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class Validity {
    public final static Validity INVALID = new Validity("INVALID", CVC4JNI.Result_INVALID_get());
    public final static Validity VALID = new Validity("VALID", CVC4JNI.Result_VALID_get());
    public final static Validity VALIDITY_UNKNOWN = new Validity("VALIDITY_UNKNOWN", CVC4JNI.Result_VALIDITY_UNKNOWN_get());

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static Validity swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + Validity.class + " with value " + swigValue);
    }

    private Validity(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private Validity(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private Validity(String swigName, Validity swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static Validity[] swigValues = { INVALID, VALID, VALIDITY_UNKNOWN };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class Type {
    public final static Type TYPE_SAT = new Type("TYPE_SAT");
    public final static Type TYPE_VALIDITY = new Type("TYPE_VALIDITY");
    public final static Type TYPE_NONE = new Type("TYPE_NONE");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static Type swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + Type.class + " with value " + swigValue);
    }

    private Type(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private Type(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private Type(String swigName, Type swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static Type[] swigValues = { TYPE_SAT, TYPE_VALIDITY, TYPE_NONE };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class UnknownExplanation {
    public final static UnknownExplanation REQUIRES_FULL_CHECK = new UnknownExplanation("REQUIRES_FULL_CHECK");
    public final static UnknownExplanation INCOMPLETE = new UnknownExplanation("INCOMPLETE");
    public final static UnknownExplanation TIMEOUT = new UnknownExplanation("TIMEOUT");
    public final static UnknownExplanation RESOURCEOUT = new UnknownExplanation("RESOURCEOUT");
    public final static UnknownExplanation MEMOUT = new UnknownExplanation("MEMOUT");
    public final static UnknownExplanation INTERRUPTED = new UnknownExplanation("INTERRUPTED");
    public final static UnknownExplanation NO_STATUS = new UnknownExplanation("NO_STATUS");
    public final static UnknownExplanation UNSUPPORTED = new UnknownExplanation("UNSUPPORTED");
    public final static UnknownExplanation OTHER = new UnknownExplanation("OTHER");
    public final static UnknownExplanation UNKNOWN_REASON = new UnknownExplanation("UNKNOWN_REASON");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static UnknownExplanation swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + UnknownExplanation.class + " with value " + swigValue);
    }

    private UnknownExplanation(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private UnknownExplanation(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private UnknownExplanation(String swigName, UnknownExplanation swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static UnknownExplanation[] swigValues = { REQUIRES_FULL_CHECK, INCOMPLETE, TIMEOUT, RESOURCEOUT, MEMOUT, INTERRUPTED, NO_STATUS, UNSUPPORTED, OTHER, UNKNOWN_REASON };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
