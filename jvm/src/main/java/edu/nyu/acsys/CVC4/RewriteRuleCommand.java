/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package edu.nyu.acsys.CVC4;

public class RewriteRuleCommand extends Command {
  private transient long swigCPtr;

  protected RewriteRuleCommand(long cPtr, boolean cMemoryOwn) {
    super(CVC4JNI.RewriteRuleCommand_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RewriteRuleCommand obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /* protected void finalize() {
    delete();
  } */

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        CVC4JNI.delete_RewriteRuleCommand(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public RewriteRuleCommand(vectorExpr vars, vectorExpr guards, Expr head, Expr body, vectorVectorExpr d_triggers) {
    this(CVC4JNI.new_RewriteRuleCommand__SWIG_0(vectorExpr.getCPtr(vars), vars, vectorExpr.getCPtr(guards), guards, Expr.getCPtr(head), head, Expr.getCPtr(body), body, vectorVectorExpr.getCPtr(d_triggers), d_triggers), true);
  }

  public RewriteRuleCommand(vectorExpr vars, Expr head, Expr body) {
    this(CVC4JNI.new_RewriteRuleCommand__SWIG_1(vectorExpr.getCPtr(vars), vars, Expr.getCPtr(head), head, Expr.getCPtr(body), body), true);
  }

  public vectorExpr getVars() {
    return new vectorExpr(CVC4JNI.RewriteRuleCommand_getVars(swigCPtr, this), false);
  }

  public vectorExpr getGuards() {
    return new vectorExpr(CVC4JNI.RewriteRuleCommand_getGuards(swigCPtr, this), false);
  }

  public Expr getHead() {
    return new Expr(CVC4JNI.RewriteRuleCommand_getHead(swigCPtr, this), true);
  }

  public Expr getBody() {
    return new Expr(CVC4JNI.RewriteRuleCommand_getBody(swigCPtr, this), true);
  }

  public vectorVectorExpr getTriggers() {
    return new vectorVectorExpr(CVC4JNI.RewriteRuleCommand_getTriggers(swigCPtr, this), false);
  }

  public void invoke(SmtEngine smtEngine) {
    CVC4JNI.RewriteRuleCommand_invoke(swigCPtr, this, SmtEngine.getCPtr(smtEngine), smtEngine);
  }

  public Command exportTo(ExprManager exprManager, ExprManagerMapCollection variableMap) {
    long cPtr = CVC4JNI.RewriteRuleCommand_exportTo(swigCPtr, this, ExprManager.getCPtr(exprManager), exprManager, ExprManagerMapCollection.getCPtr(variableMap), variableMap);
    return (cPtr == 0) ? null : new Command(cPtr, false);
  }

  public Command clone() {
    long cPtr = CVC4JNI.RewriteRuleCommand_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new Command(cPtr, false);
  }

  public String getCommandName() {
    return CVC4JNI.RewriteRuleCommand_getCommandName(swigCPtr, this);
  }

}
